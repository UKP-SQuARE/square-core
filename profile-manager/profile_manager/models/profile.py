from datetime import datetime
from enum import Enum
from typing import Dict, List, Optional

from pydantic import BaseModel, Field, validator

from profile_manager.mongo.mongo_model import MongoModel
from profile_manager.mongo.py_object_id import PyObjectId

from pydantic import BaseModel
from typing import List, Optional

class LLM(MongoModel):
    id: Optional[PyObjectId] = Field(None, description="Identifier generated by mongoDB")
    Name: str
    version: str

class Badge(MongoModel):
    id: Optional[PyObjectId] = Field(
        None, description="Identifier generated by mongoDB"
    )
    title: str
    description: str
    icon: str
    type: str

class Certificate(MongoModel):
    id: Optional[PyObjectId] = Field(
        None, description="Identifier generated by mongoDB"
    )
    title: str
    score: str
    evaluationType: str
    date: str

class Profile(MongoModel):
    id: Optional[PyObjectId] = Field(None, description="Identifier generated by mongoDB")
    email: str
    overallPoints: int
    currentPoints: int
    Certificates: List[PyObjectId] = []    # Default to empty list
    Badges: List[PyObjectId] = []          # Default to empty list
    Reviews: List[PyObjectId] = []     # Default to empty list
    availableModels: List[PyObjectId] = [] # References to LLM models

class LeaderboardEntry(MongoModel):
    email: str
    overallPoints: int
class Rating(MongoModel):
    Metrics: Dict[str, int]

class ReviewMessage(BaseModel):
    Prompt: str
    Response: str
    Rating: Optional[Rating] 

class Review(MongoModel):
    id: Optional[PyObjectId] = Field(None, description="Identifier generated by MongoDB")
    Messages: List[ReviewMessage]
    Rating: Rating
    AchievedPoints: int
    Date: str
    LLM: LLM