from typing import Any, List, Optional

from pydantic import BaseModel, Field

from skill_manager.core.mongo_model import MongoModel
from skill_manager.core.py_object_id import PyObjectId


class SkillTemplateParameter(BaseModel):
    name: str = Field(...)
    description: str = Field(...)
    valid_values: Optional[List[Any]] = Field(
        None, description="List of valid values for this parameter."
    )


class SkillTemplate(MongoModel):
    id: Optional[PyObjectId] = Field(
        None, description="Identifier generated by mongoDB"
    )
    name: str = Field(...)
    description: Optional[str] = Field(None)
    user_id: str = Field(description="User ID of the creator of the Skill Template.")
    parameters: Optional[List[SkillTemplateParameter]] = Field(None)
    client_id: Optional[str] = Field(
        None, description="The clientId of the skill stored in Keycloak."
    )
    client_secret: Optional[str] = Field(
        None, description="The cleint secret of the skill stored in Keycloak."
    )
